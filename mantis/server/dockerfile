# It is a plain text file with no file extension.
# It contains instructions for Docker to build an image.
# Example: /api-gateway/Dockerfile should look like this:
# dockerfile

# âœ… When Can You Remove the Dockerfile?
# ðŸš« You can remove /api-gateway/Dockerfile if:

# You are using a prebuilt Docker image (like node:18 or a published API image from Docker Hub).
# You donâ€™t need custom environment setups, package installs, or additional dependencies.
# âœ… You must keep the Dockerfile if:

# You need to install dependencies (npm install) inside the container.
# You want a consistent runtime environment (same Node.js version, same dependencies).
# You donâ€™t want to manually install dependencies before running the container.

#Example

# # # Use Node.js base image
# FROM node:18

# # # Set working directory inside the container
# WORKDIR /app

# # # Copy package.json and install dependencies
# COPY package.json package-lock.json ./
# RUN npm install

# # # Copy application files
# COPY . .

# # # Expose port 8000 for API
# EXPOSE 3001

# # # Start the API Gateway
# CMD ["npm", "run", "dev"]


# FROM node:18

# WORKDIR /app

# # Copy package and lock
# COPY package.json package-lock.json ./
# RUN npm install

# # Copy the rest
# COPY tsconfig.json ./
# COPY src ./src
# COPY types ./types

# # 1) Build the TypeScript
# RUN npm run build  # <-- e.g. "tsc" or "tsc && some-other-step"

# # 2) Expose the port you listen on (3001 in your code)
# EXPOSE 3001

# # 3) Run the built JS
# CMD ["node", "dist/server.js"]

# 1) Use a Node 18 base image
FROM node:18

# 2) Set working directory
WORKDIR /app

# 3) Copy package files and install dependencies
COPY package.json package-lock.json ./
RUN npm install

# 4) Copy the rest of the source into the container
COPY tsconfig.json ./
COPY tsconfig.node.json ./
COPY server ./server
COPY src ./src
COPY types ./types

# 5) Build TypeScript (creates "dist/" folder)
# RUN npm run build
RUN npm run build:client && npm run build:server


# 6) Expose the port your server listens on
EXPOSE 3001

# 7) Launch the compiled server
# CMD ["node", "dist/server.js"]
CMD ["npm", "start"]




